button_card_templates: !include button_card_templates.yaml

views:
  - type: custom:grid-layout
    path: 0
    layout:
      #default
      grid-gap: var(--custom-layout-card-padding)
      grid-template-columns: repeat(4, 1fr) 0
      grid-template-rows: 0 repeat(2, fit-content(100%)) 0fr
      grid-template-areas: |
        "sidebar  .           .        .        ."
        "sidebar  livingroom  kitchen  bedroom  ."
        "sidebar  media       other    home     ."
        "sidebar  footer      footer   footer   ."
      mediaquery:
        #phone
        "(max-width: 800px)":
          grid-gap: calc(var(--custom-layout-card-padding) * 1.7)
          grid-template-columns: 0 repeat(2, 1fr) 0
          grid-template-rows: 0 repeat(5, fit-content(100%)) 0fr
          grid-template-areas: |
            ".  .           .        ."
            ".  sidebar     sidebar  ."
            ".  livingroom  bedroom  ."
            ".  kitchen     other    ."
            ".  media       home     ."
            ".  footer      footer   ."
            ".  .           .        ."
        #portrait
        "(max-width: 1200px)":
          grid-gap: var(--custom-layout-card-padding)
          grid-template-columns: repeat(3, 1fr) 0
          grid-template-rows: 0 repeat(3, fit-content(100%)) 0fr
          grid-template-areas: |
            "sidebar  .           .        ."
            "sidebar  livingroom  bedroom  ."
            "sidebar  kitchen     other    ."
            "sidebar  media       home     ."
            "sidebar  footer      footer   ."
            "sidebar  .           .        ."
    cards:
      - type: custom:button-card
        styles: #extra_styles fix
          card:
            - display: none

      #################################################
      #                                               #
      #                    SIDEBAR                    #
      #                                               #
      #################################################

      - type: vertical-stack
        view_layout:
          grid-area: sidebar
        cards:
          - type: custom:button-card
            entity: sensor.template_sidebar
            template: sidebar_template
            
          - type: entities
            entities:
              - entity: input_select.selectable_room
                name: "Select Room.."
                icon: "mdi:floor-plan"
                
          - type: conditional
            conditions:
              - entity: input_select.selectable_room
                state: All
            card:
              type: "custom:slider-entity-row"
              entity: light.all_lights
              step: 1
              name: " "
              grow: true

          - type: conditional
            conditions:
              - entity: input_select.selectable_room
                state: Living Room
            card:
              type: "custom:slider-entity-row"
              entity: light.living_room_lights
              step: 1
              name: " "
              grow: true

          - type: conditional
            conditions:
              - entity: input_select.selectable_room
                state: Kitchen
            card:
              type: "custom:slider-entity-row"
              entity: light.kitchen_lights
              step: 1
              name: " "
              grow: true

          - type: conditional
            conditions:
              - entity: input_select.selectable_room
                state: Living Room And Kitchen
            card:
              type: "custom:slider-entity-row"
              entity: light.living_room_and_kitchen_lights
              step: 1
              name: " "
              grow: true

          - type: conditional
            conditions:
              - entity: input_select.selectable_room
                state: Bedroom
            card:
              type: "custom:slider-entity-row"
              entity: light.bedroom_lights
              step: 1
              name: " "
              grow: true

          - type: "custom:rgb-light-card"
            entity: light.all_lights
            justify: "around"
            colors:
              - brightness: 181
                color_temp: 200
                icon_color: '#FFFFFF'
              - brightness: 90
                color_temp: 370
              - hs_color: [286, 97]
              - hs_color: [0, 100]
              - hs_color: [220, 100]
              - type: call-service
                label: "Off"
                icon_color: 'center no-repeat url("data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%20version%3D%221.1%22%20id%3D%22mdi-lightbulb%22%20width%3D%2224%22%20height%3D%2224%22%20viewBox%3D%220%200%2024%2024%22%3E%3Cpath%20fill%3D%22%23d32f2f%22%20d%3D%22M12%2C2A7%2C7%200%200%2C0%205%2C9C5%2C11.38%206.19%2C13.47%208%2C14.74V17A1%2C1%200%200%2C0%209%2C18H15A1%2C1%200%200%2C0%2016%2C17V14.74C17.81%2C13.47%2019%2C11.38%2019%2C9A7%2C7%200%200%2C0%2012%2C2M9%2C21A1%2C1%200%200%2C0%2010%2C22H14A1%2C1%200%200%2C0%2015%2C21V20H9V21Z%22%20%2F%3E%3C%2Fsvg%3E"), #111111'
                service: light.turn_off
                service_data:
                  entity_id: light.selected_room

          # - type: conditional
          #   conditions:
          #     - entity: input_boolean.laundry_display
          #       state: "on"
          #   card:
          #     type: custom:button-card
          #     entity: timer.laundry
          #     template: laundry

          # - type: grid
          # - type: horizontal-stack
          #   cards:

      # Container: Selectable Room
          # - type: custom:button-card
          #   name: Master Light Control
          #   template: container
          #   custom_fields:
          #     buttons:
          #       card:
          #         type: vertical-stack
          #         cards:
          #           - type: entities
          #             show_header_toggle: false
          #             entities:
          #               - entity: input_select.selectable_room
          #                 name: "Select Room.."
          #                 icon: "mdi:floor-plan"
                          
          #               - type: conditional
          #                 conditions:
          #                   - entity: input_select.selectable_room
          #                     state: All
          #                 card:
          #                   - type: "custom:slider-entity-row"
          #                     entity: light.all_lights
          #                     step: 1

          #               - type: "custom:rgb-light-card"
          #                 entity: light.all_lights
          #                 justify: "around"
          #                 colors:
          #                   - brightness: 181
          #                     color_temp: 200
          #                     icon_color: '#FFFFFF'
          #                   - brightness: 90
          #                     color_temp: 370
          #                   - hs_color: [286, 97]
          #                   - hs_color: [0, 100]
          #                   - hs_color: [220, 100]
          #                   - type: call-service
          #                     label: "Off"
          #                     icon_color: 'center no-repeat url("data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%20version%3D%221.1%22%20id%3D%22mdi-lightbulb%22%20width%3D%2224%22%20height%3D%2224%22%20viewBox%3D%220%200%2024%2024%22%3E%3Cpath%20fill%3D%22%23d32f2f%22%20d%3D%22M12%2C2A7%2C7%200%200%2C0%205%2C9C5%2C11.38%206.19%2C13.47%208%2C14.74V17A1%2C1%200%200%2C0%209%2C18H15A1%2C1%200%200%2C0%2016%2C17V14.74C17.81%2C13.47%2019%2C11.38%2019%2C9A7%2C7%200%200%2C0%2012%2C2M9%2C21A1%2C1%200%200%2C0%2010%2C22H14A1%2C1%200%200%2C0%2015%2C21V20H9V21Z%22%20%2F%3E%3C%2Fsvg%3E"), #111111'
          #                     service: light.turn_off
          #                     service_data:
          #                       entity_id: light.selected_room

      # Conditional: Selectable Room

          # - type: conditional
          #   conditions:
          #     - entity: input_select.selectable_room
          #       state: All
          #   card:
          #     type: custom:button-card
          #     entity: light.all_lights
          #     tap_action:
          #       action: none
          #     template:
          #       - light_selected
          #       - icon_hue

          # - type: conditional
          #   conditions:
          #     - entity: input_select.selectable_room
          #       state: Living Room
          #   card:
          #     type: custom:button-card
          #     entity: light.living_room_lights
          #     template:
          #       - light
          #       - icon_hue

          # - type: conditional
          #   conditions:
          #     - entity: input_select.selectable_room
          #       state: Kitchen
          #   card:
          #     type: custom:button-card
          #     entity: light.kitchen_lights
          #     template:
          #       - light
          #       - icon_hue

          # - type: conditional
          #   conditions:
          #     - entity: input_select.selectable_room
          #       state: Living Room And Kitchen
          #   card:
          #     type: custom:button-card
          #     entity: light.living_room_and_kitchen_lights
          #     template:
          #       - light
          #       - icon_hue

          # - type: conditional
          #   conditions:
          #     - entity: input_select.selectable_room
          #       state: Bedroom
          #   card:
          #     type: custom:button-card
          #     entity: light.bedroom_lights
          #     template:
          #       - light
          #       - icon_hue
                
                
      # Conditional: Selectable Light

          # - type: conditional
          #   conditions:
          #     - entity: input_select.selectable_light
          #       state: Chandelier
          #   card:
          #     type: custom:button-card
          #     entity: light.chandelier
          #     tap_action:
          #       action: none
          #     template:
          #       - light
          #       - icon_hue

          # - type: conditional
          #   conditions:
          #     - entity: input_select.selectable_light
          #       state: TV
          #   card:
          #     type: custom:button-card
          #     entity: light.tv
          #     template:
          #       - light
          #       - icon_hue

          # - type: conditional
          #   conditions:
          #     - entity: input_select.selectable_light
          #       state: Kitchen East
          #   card:
          #     type: custom:button-card
          #     entity: light.kitchen_east
          #     template:
          #       - light
          #       - icon_hue

          # - type: conditional
          #   conditions:
          #     - entity: input_select.selectable_light
          #       state: Kitchen West
          #   card:
          #     type: custom:button-card
          #     entity: light.kitchen_west
          #     template:
          #       - light
          #       - icon_hue

          # - type: conditional
          #   conditions:
          #     - entity: input_select.selectable_light
          #       state: Bedroom
          #   card:
          #     type: custom:button-card
          #     entity: light.bedroom
          #     template:
          #       - light
          #       - icon_hue
                
          # - type: conditional
          #   conditions:
          #     - entity: input_select.selectable_light
          #       state: Bed
          #   card:
          #     type: custom:button-card
          #     entity: light.bed
          #     template:
          #       - light
          #       - icon_hue
                
          # - type: conditional
          #   conditions:
          #     - entity: input_select.selectable_light
          #       state: Hallway
          #   card:
          #     type: custom:button-card
          #     entity: light.hallway
          #     template:
          #       - light
          #       - icon_hue
                
          # - type: conditional
          #   conditions:
          #     - entity: input_select.selectable_light
          #       state: Bathroom
          #   card:
          #     type: custom:button-card
          #     entity: light.bathroom
          #     template:
          #       - light
          #       - icon_hue
            

          - type: grid
            cards:
              # - type: button
              #   icon: mdi:cctv
              #   # tap_action: !include popup/sidebar_vacuum.yaml
              #   tap_action:
              #     action: navigate
              #     navigation_path: /ccab4aaf_frigate/dashboard
              #   hold_action:
              #     action: none

              # - type: button
              #   icon: mdi:cctv
              #   tap_action:
              #     action: fire-dom-event
              #     browser_mod:
              #       command: popup
              #       title: Frigate
              #       style: >
              #         :host .content {
              #           width: 75em;
              #         }
              #       card:
              #         type: iframe
              #         url: /ccab4aaf_frigate/dashboard
              #         aspect_ratio: 65%
              #         style: |
              #           ha-card {
              #             border-radius: 0 0 1em 1em;
              #           }
              #   hold_action:
              #     action: none
                  
              - type: button
                icon: mdi:cctv
                tap_action: !include popup/sidebar_security.yaml
                hold_action:
                  action: none

              - type: button
                icon: mdi:information-outline
                tap_action: !include popup/sidebar_information.yaml
                hold_action:
                  action: none

              - type: button
                icon: mdi:arrow-up-bold-circle-outline
                tap_action: !include popup/sidebar_update.yaml
                # tap_action:
                #   action: call-service
                #   service: frontend.reload_themes
                
                # hold_action:
                #   action: call-service
                #   service: homeassistant.update_entity
                #   service_data:
                #     entity_id: sensor.hacs

      #################################################
      #                                               #
      #                  Living Room                  #
      #                                               #
      #################################################

      - type: grid
        title: Living Room
        view_layout:
          grid-area: livingroom
        columns: 2
        cards:
          
          - type: custom:button-card
            entity: light.living_room_lights #living_room_lights
            name: Living Room
            template:
              - slide_light
              - icon_hue

          - type: custom:button-card
            entity: light.tv #living_room_lights
            name: TV LED
            template:
              - slide_light
              - icon_hue

        # Slide light without templates
          # - type: custom:button-card
          #   entity: light.tv #living_room_lights
          #   name: Living Room
          #   variables:
          #     circle_input: >
          #       [[[ return entity === undefined || Math.round(entity.attributes.brightness / 2.54); ]]]
          #   aspect_ratio: 1/1
          #   show_state: false
          #   show_icon: false
          #   state_display: >
          #     [[[ if (variables.state === true) return 'Unknown'; ]]]
          #   tap_action:
          #     ui_sound_tablet: |
          #       [[[
          #         let screensaver = states['switch.galaxy_tab_a_screensaver'] === undefined || 
          #           states['switch.galaxy_tab_a_screensaver'].state;

          #         if (variables.state === 'off' && screensaver === 'off') {
          #           hass.callService('media_player', 'play_media', {
          #             entity_id: 'media_player.browser_9c06ce87_d1cf313c',
          #             media_content_id: '/local/sound/on.m4a',
          #             media_content_type: 'music'
          #           });
          #         }
          #         if (variables.state === 'on' && screensaver === 'off') {
          #           hass.callService('media_player', 'play_media', {
          #             entity_id: 'media_player.browser_9c06ce87_d1cf313c',
          #             media_content_id: '/local/sound/off.m4a',
          #             media_content_type: 'music'
          #           });
          #         }
          #       ]]]
          #     animation_card: |
          #       [[[
          #         let time = 900;
          #         this.shadowRoot.getElementById('card').style.animation =
          #           `card_bounce ${time}ms cubic-bezier(0.22, 1, 0.36, 1)`,
          #           window.setTimeout(() => {
          #             this.shadowRoot.getElementById('card').style.animation = 'none'
          #           }, time);
          #       ]]]
          #     action: toggle
          #     haptic: medium
          #   styles:
          #     grid:
          #       - grid-template-areas: |
          #           "icon   circle"
          #           "n      n"
          #           "slider slider"
          #       - grid-template-columns: repeat(2, 1fr)
          #       - grid-template-rows: auto 1fr 1fr
          #       - gap: 4%
          #       - align-items: start
          #     name:
          #       - justify-self: start
          #       - line-height: 115%
          #     state:
          #       - justify-self: start
          #       - line-height: 115%
          #     card:
          #       - font-family: Sf Display
          #       - border-radius: var(--custom-button-card-border-radius)
          #       - -webkit-tap-highlight-color: rgba(0,0,0,0)
          #       - transition: none
          #       - padding: 5%
          #       - box-shadow: none
          #       - overflow: unset
          #       - --mdc-ripple-color: >
          #           [[[
          #             return variables.consider_on ?
          #               'rgb(0, 0, 0)' :
          #               'rgba(255, 255, 255, 0.3)';
          #           ]]]
          #       - color: >
          #           [[[
          #             return variables.consider_on ?
          #               'rgba(0, 0, 0, 0.6)' :
          #               'rgba(255, 255, 255, 0.3)';
          #           ]]]
          #       - background-color: >
          #           [[[
          #             return variables.consider_on ?
          #               'rgba(255, 255, 255, 0.8)' :
          #               'rgba(115, 115, 115, 0.2)';
          #           ]]]
          #     custom_fields:
          #       slider:
          #         - position: absolute
          #         - bottom: -3%
          #         - align-items: start
          #         - justify-self: start
          #         - filter: opacity(50%)
          #         - overflow: unset
          #         - box-shadow: none
          #         - background-color: pink
          #       circle:
          #         - display: initial
          #         - width: 90%
          #         - letter-spacing: 0.03vw
          #         - margin: -6% -6% 0 0
          #         - justify-self: end
          #         - opacity: 1
          #       icon:
          #         - width: 77%
          #         - margin-left: -14%
          #         - margin-top: 1%
          #   custom_fields:
          #     slider:
          #       card:
          #         type: custom:mod-card
          #         card:
          #           type: custom:slider-entity-row
          #           full_row: true
          #           hide_state: true
          #           entity: "[[[ return entity.entity_id ]]]"
          #     circle: >
          #       [[[
          #         if (variables.state === 'on') {
          #           let input = variables.circle_input,
          #             radius = 20.5,
          #             circumference = radius * 2 * Math.PI;
          #           return `
          #             <svg viewBox="0 0 50 50">
          #               <style>
          #                 circle {
          #                   transform: rotate(-90deg);
          #                   transform-origin: 50% 50%;
          #                   stroke-dasharray: ${circumference};
          #                   stroke-dashoffset: ${circumference - input / 100 * circumference};
          #                 }
          #                 tspan {
          #                   font-size: 10px;
          #                 }
          #               </style>
          #               <circle cx="25" cy="25" r="${radius}" stroke="#b2b2b2" stroke-width="1.5" fill="none" />
          #               <text x="50%" y="54%" fill="#8d8e90" font-size="14" text-anchor="middle" alignment-baseline="middle" dominant-baseline="middle">${input}<tspan font-size="10">%</tspan></text>
          #             </svg>
          #           `;
          #         }
          #       ]]]
          #     icon: >
          #       [[[
          #         let state = variables.state === 'on' && variables.timeout < 2000 ? 'on' : null;
          #         return `
          #           <svg viewBox="0 0 50 50">
          #             <style>
          #               @keyframes on {
          #                 0% {
          #                   transform: scale(0.85);
          #                 }
          #                 20% {
          #                   transform: scale(1.1);
          #                 }
          #                 40% {
          #                   transform: scale(0.95);
          #                 }
          #                 60% {
          #                   transform: scale(1.03);
          #                 }
          #                 80% {
          #                   transform: scale(0.97);
          #                 }
          #                 100% {
          #                   transform: scale(1);
          #                 }
          #               }
          #               .on {
          #                 animation: on 0.8s;
          #                 transform-origin: center;
          #               }
          #             </style>
          #             <path fill="#9da0a2" d="M27.4 47.3h-4.9s-.7.1-.7.8.4.9.7.9h4.9c.3 0 .7-.1.7-.9s-.7-.8-.7-.8zm3.3-2.9H19.3s-.8 0-.8.8.6.9.8.9h11.5c.2 0 .8-.1.8-.9-.1-.8-.9-.8-.9-.8zm0-3H19.3s-.8 0-.8.8.6.9.8.9h11.5c.2 0 .8-.1.8-.9-.1-.8-.9-.8-.9-.8zm0-2.9H19.3s-.8 0-.8.8.6.9.8.9h11.5c.2 0 .8-.1.8-.9s-.9-.8-.9-.8zm5.2-23.2c-3.3-5.3-7-5.6-10.9-5.6-3.8 0-8.4.4-10.9 5.6-.1.1-.1.3.1.7.4.8 3.3 7.2 3.2 18.8 0 1.1-.1 1.6 0 1.7 0 .1 0 .7 1.1.7h13c1 0 1-.5 1.1-.7v-1.7c-.1-11.6 2.8-18 3.2-18.8.1-.4.1-.5.1-.7"/>
          #             <path class="${state}" fill="var(--light-color)" d="M14.1 15.3c3.4-.3 7-.4 10.9-.4 3.8 0 7.5.2 10.9.4.4-.4.7-.8.9-1.1C39 8.5 38.9 6.5 38.9 6c-.2-4.4-8.4-5-12.1-5h0-3.4c-3.7 0-12 .5-12.1 5 0 .5-.1 2.5 2.1 8.2 0 .3.3.8.7 1.1z"/>
          #           </svg>
          #         `;
          #       ]]]
          #   extra_styles: |
          #     [[[
          #       if (entity) {
          #         let hs = entity.attributes.hs_color == undefined,
          #           h = hs || entity.attributes.hs_color[0],
          #           s = hs || entity.attributes.hs_color[1],
          #           l_min = 28,
          #           l_max = 48,
          #           l_calc = 
          #             entity.attributes.brightness / 2.54 * (l_max - l_min) / 100 + l_min;
          #         var light_color = 
          #           entity.attributes.color_mode === 'color_temp'
          #             ? `hsl(204, 58%, ${l_calc}%);`
          #             : `hsl(${h}, ${s}%, ${l_calc}%);`;
          #       }
          #       return `
          #         svg {
          #           --light-color:
          #           ${ variables.state === 'on' && entity.attributes.brightness != undefined
          #               ? light_color
          #               : variables.state === 'on' && entity.attributes.brightness == undefined
          #               ? 'var(--state-icon-active-color);'
          #               : 'var(--state-icon-color);'
          #           }
          #         }
          #         #container {
          #           text-align: left !important;
          #         }
          #         #slider {
          #           background-image: linear-gradient(to right,rgb(100,180,255),rgb(255,255,255),rgb(255,136,13));
          #         }
          #         #name, #state {
          #           font-size: 1.34vw;
          #           letter-spacing: 0.05vw;
          #         }
          #         /* portrait */
          #         @media screen and (max-width: 1200px) {
          #           #slider {
          #             background-image: linear-gradient(to right,rgb(255,255,255),rgb(100,180,255),rgb(255,136,13));
          #           }
          #           #name, #state {
          #             font-size: 2vw;
          #             letter-spacing: 0.05vw;
          #           }
          #         }
          #         /* phone */
          #         @media screen and (max-width: 800px) {
          #           #slider {
          #             background-image: linear-gradient(to right,rgb(255,136,13),rgb(255,255,255),rgb(100,180,255));
          #           }
          #           #name, #state {
          #             font-size: 3.1vw;
          #             letter-spacing: 0.12vw;
          #           }
          #         }
          #         @keyframes card_bounce {
          #           0% {
          #             transform: scale(1);
          #           }
          #           15% {
          #             transform: scale(0.9);
          #           }
          #           25% {
          #             transform: scale(1);
          #           }
          #           30% {
          #             transform: scale(0.98);
          #           }
          #           100% {
          #             transform: scale(1);
          #           }
          #         }
          #       `
          #     ]]]


          # - type: custom:button-card
          #   entity: light.tv
          #   name: TV Light
          #   template:
          #     - light
          #     - icon_tv

          # - type: custom:button-card
          #   template:
          #     - slide_light
          #     - icon_hue
          #   entity: light.tv
          #   name: TV Light
          #   custom_fields:
          #     slider:
          #       card:
          #         type: custom:mod-card
          #         card:
          #           type: custom:slider-entity-row
          #           entity: >
          #             [[[ return entity.entity_id ]]]
          #           full_row: true
          #           hide_state: true
          #         style: |
          #           ha-card, ha-slider {
          #             --ha-card-background: pink;
          #           }

          # - type: custom:button-card
          #   entity: light.tv
          #   name: TV
          #   icon: mdi:television
          #   # aspect_ratio: 1/1 //Break it for some reason
          #   # size: 40%
          #   styles:
          #     card:
          #       - background-color: rgb(3, 169, 244)
          #       - box-shadow: none
          #       - alignt-items: start
          #       - overflow: unset
          #     name:
          #       - color: white
          #       - justify-self: start
          #     label:
          #       - color: pink
          #     icon:
          #       - color: red
          #     custom_fields:
          #       slider:
          #         - justify-self: center
          #         - align-items: center
          #         - filter: opacity(50%)
          #         - background-color: pink
          #         - width: 60%
          #         - margin: 6% 6% 0 0
          #         - overflow: unset
          #     grid:
          #       - grid-template-areas: '"n" "i" "slider"'
          #       - grid-template-columns: 1fr
          #       - grid-template-rows: min-content fr min-content
          #   custom_fields:
          #     slider:
          #       card:
          #         type: custom:mod-card
          #         card:
          #           type: custom:slider-entity-row
          #           full_row: true
          #           hide_state: true
          #           entity: "[[[ return entity.entity_id ]]]"
          #   extra_styles: |
          #     #container {
          #       text-align: left !important;
          #     }
          #     #name {
          #       font-size: 1.34vw;
          #       letter-spacing: 0.05vw;
          #     }
          #     .wrapper {
          #         display: flex;
          #         align-items: center;
          #         justify-content: center;
          #         flex: 100 1 0%;
          #         height: 20px;
          #         width: auto;
          #     }
          #     #slider {
          #       width: 85%;
          #     }

          - type: custom:button-card
            entity: media_player.living_room_chromecast
            name: TV
            state_display: >
              [[[
                if (variables.state == 'playing') {
                  return 'On';
                }
              ]]]
            hold_action: !include popup/vardagsrum_tv.yaml
            template:
              - media
              - icon_tv

          - type: custom:button-card
            entity: light.lightning_bolts
            name: Lightning
            template:
              - light

      #################################################
      #                                               #
      #                    Kitchen                    #
      #                                               #
      #################################################

      - type: grid
        title: Kitchen
        view_layout:
          grid-area: kitchen
        columns: 2
        cards:
          - type: custom:button-card
            entity: light.kitchen_lights
            name: Spotlights
            template:
              - light
              - icon_hue

          - type: custom:button-card
            entity: switch.kettle
            name: Kettle
            # triggers_update:
            #   - lock.dator
            #   - script.home_leave
            # hold_action: !include popup/studio_dator.yaml
            template:
              - base
              # - icon_imac
              # - loader
              # - lock

          - type: custom:button-card
            entity: light.kitchen_west
            name: Left
            template:
              - light
              - icon_spot

          - type: custom:button-card
            entity: light.kitchen_east
            name: Right
            template:
              - light
              - icon_spot

          # - type: custom:button-card
          #   entity: switch.wemo_monitors
          #   name: Monitorer
          #   triggers_update: sensor.monitors_volume
          #   hold_action: !include popup/studio_monitorer.yaml
          #   template:
          #     - base
          #     - icon_monitors
          #     - circle
          #     - loader
          #   variables:
          #     circle_input: >
          #       [[[
          #         var entity_id = 'sensor.monitors_volume';
          #         return states[entity_id] === undefined ? null : states[entity_id].state;
          #       ]]]

      #################################################
      #                                               #
      #                    BEDROOM                    #
      #                                               #
      #################################################

      - type: grid
        title: Bedroom
        view_layout:
          grid-area: bedroom
        columns: 2
        cards:
          - type: custom:button-card
            entity: light.bedroom
            name: Bedroom
            template:
              - slide_light
              - icon_hue

          - type: custom:button-card
            entity: light.bed
            name: Bed LEDs
            template:
              - slide_light
              - icon_hue
            # template:
            #   - light
            #   - slider
            #   - icon_lamp
            # styles:
            #   grid:
            #     # - position: relative
            #     - grid-template-areas: |
            #         "icon   circle"
            #         "n      n"
            #         "slider slider"
            #     - grid-template-columns: repeat(2, 1fr)
            #     - grid-template-rows: auto 1fr 1fr
            #     - gap: 4%
            #     - align-items: start

          # - type: custom:button-card
          #   entity: light.bed
          #   name: Bed LEDs
          #   template:
          #     - light
          #     - icon_lamp

          # - type: custom:button-card
          #   entity: climate.ac
          #   name: Klimat
          #   hold_action: !include popup/sovrum_klimat.yaml
          #   template:
          #     - base
          #     - icon_climate
          #     - climate
          #   variables:
          #     circle_input: >
          #       [[[
          #         if (entity) {
          #           return entity.state == 'cool' ?
          #             entity.attributes.temperature :
          #             entity.attributes.current_temperature;
          #         }
          #       # ]]]

          - type: custom:button-card
            entity: media_player.bedroom_tv
            name: "TV"
            # hold_action: !include popup/vardagsrum_playstation.yaml
            hold_action: !include popup/sovrum_tv2.yaml
            template:
              - media
              - icon_tv

          - type: custom:button-card
            entity: switch.bedroom_monitor
            name: "Monitor"
            hold_action: !include popup/sovrum_tv2.yaml
            template:
              - base
              - icon_tv

      #################################################
      #                                               #
      #                     MEDIA                     #
      #                                               #
      #################################################

      - type: grid
        title: Media
        view_layout:
          grid-area: media
        columns: 1
        cards:
          # - type: custom:mod-card
          #   style:
          #     swipe-card:
          #       $: |
          #         .swiper-container {
          #           padding: 0px 0px 20px 0px !important;
          #         }
          - type: "custom:swipe-card"
            start_card: 1
            parameters:
              roundLengths: true
              effect: coverflow
              speed: 650
              spaceBetween: 20
              threshold: 7
              coverflowEffect:
                rotate: 80
                depth: 300
            cards:
              - type: grid
                columns: 2
                cards:
                  - type: custom:button-card
                    entity: media_player.living_room_chromecast
                    name: Living Room TV
                    template:
                      - media
                      - icon_tv

                  - type: custom:button-card
                    entity: media_player.living_room_speaker
                    name: Living Room Speaker
                    template:
                      - media
                      - icon_nest_mini

                  - type: custom:button-card
                    name: Bedroom TV
                    entity: media_player.bedroom_tv
                    template:
                      - media
                      - icon_tv

                  - type: custom:button-card
                    entity: media_player.bedroom_speaker
                    name: Bedroom Speaker
                    template:
                      - media
                      - icon_nest_mini

                  # - type: custom:button-card
                  #   entity: media_player.spotify_dave_lambe
                  #   name: Spotify
                  #   template:
                  #     - media
                  #     - icon_spotify

                  # - type: custom:button-card
                  #   entity: media_player.wall_speaker
                  #   name: Wall Speaker
                  #   template:
                  #     - media
                  #     - icon_nest_mini

              - type: horizontal-stack
                cards:
                  - type: conditional
                    conditions:
                      - entity: input_select.conditional_media
                        state: Living Room TV
                    card:
                      type: custom:button-card
                      entity: media_player.living_room_chromecast
                      template:
                        - conditional_media
                        - icon_tv

                  - type: conditional
                    conditions:
                      - entity: input_select.conditional_media
                        state: Living Room Speaker
                    card:
                      type: custom:button-card
                      entity: media_player.living_room_speaker
                      template:
                        - conditional_media
                        - icon_nest_mini

                  - type: conditional
                    conditions:
                      - entity: input_select.conditional_media
                        state: Bedroom TV
                    card:
                      type: custom:button-card
                      entity: media_player.bedroom_tv
                      template:
                        - conditional_media
                        - icon_tv

                  - type: conditional
                    conditions:
                      - entity: input_select.conditional_media
                        state: Bedroom Speaker
                    card:
                      type: custom:button-card
                      entity: media_player.bedroom_speaker
                      template:
                        - conditional_media
                        - icon_nest_mini

                  - type: conditional
                    conditions:
                      - entity: input_select.conditional_media
                        state: Wall Speaker
                    card:
                      type: custom:button-card
                      entity: media_player.wall_speaker
                      template:
                        - conditional_media
                        - icon_nest_mini

                  - type: conditional
                    conditions:
                      - entity: input_select.conditional_media
                        state: Spotify
                    card:
                      type: custom:button-card
                      entity: media_player.spotify_dave_lambe
                      template:
                        - conditional_media
                        - icon_spotify

                  - type: conditional
                    conditions:
                      - entity: input_select.conditional_media
                        state: Last Downloaded
                    card:
                      type: custom:button-card
                      entity: sensor.plex_recently_added
                      tap_action:
                        action: none
                      template:
                        - conditional_media
                        - recently_downloaded
                        - icon_plex

      #################################################
      #                                               #
      #                    OTHER                      #
      #                                               #
      #################################################

      - type: grid
        title: Other
        view_layout:
          grid-area: other
        columns: 2
        cards:
          - type: custom:button-card
            entity: light.bathroom
            name: Bathroom
            template:
              - light
              - icon_bathroom

          - type: custom:button-card
            entity: switch.fan
            name: "Fan"
            hold_action: !include popup/studio_flakt.yaml
            template:
              - base
              - icon_fan2
              - loader

          - type: custom:button-card
            entity: light.hallway
            name: Hallway
            template:
              - light
              - icon_spot
              

          - type: custom:button-card
            entity: light.closet
            name: Closet
            template:
              - light
              - icon_closet

      #################################################
      #                                               #
      #                     HOME                      #
      #                                               #
      #################################################

      - type: grid
        title: Home
        view_layout:
          grid-area: home
        columns: 2
        cards:
          - type: custom:button-card
            entity: person.dave
            name: Dave
            triggers_update:
              - device_tracker.davecom
            tap_action: !include popup/person_dave.yaml
            hold_action:
              action: none
            variables:
              retain: sensor.sanja_last_changed
            template: person

          - type: custom:button-card
            entity: person.ebony
            name: Ebony
            triggers_update:
              - device_tracker.ebonycom
            tap_action: !include popup/person_ebony.yaml
            hold_action:
              action: none
            variables:
              retain: sensor.sanja_last_changed
            template: person

          # - type: custom:button-card
          #   entity: light.all_lights
          #   name: All Lights
          #   template:
          #     - light
          #     - icon_hue

          # - type: custom:button-card
          #   entity: >
          #     [[[
          #       let entity_id = 'input_select.selectable_room';
          #       let room_light = 'light.' + states[entity_id].state.toLowerCase().replace(/ /g, "_") + '_lights';
          #       return states[room_light].entity_id;
          #     ]]]
          #   name: >
          #     [[[
          #       var entity_id = 'input_select.selectable_room';
          #       return states[entity_id] === undefined ? 'Fail' : states[entity_id].state + ' Lights';
          #     ]]]
          #   template:
          #     - light
          #     - icon_hue
          
          # # Conditional: Selectable Room
              
          # - type: horizontal-stack
          #   cards:

          #     - type: conditional
          #       conditions:
          #         - entity: input_select.selectable_room
          #           state: All
          #       card:
          #         type: custom:button-card
          #         entity: light.all_lights
          #         tap_action:
          #           action: none
          #         template:
          #           - light
          #           - icon_hue

          #     - type: conditional
          #       conditions:
          #         - entity: input_select.selectable_room
          #           state: Living Room
          #       card:
          #         type: custom:button-card
          #         entity: light.living_room_lights
          #         template:
          #           - light
          #           - icon_hue

          #     - type: conditional
          #       conditions:
          #         - entity: input_select.selectable_room
          #           state: Kitchen
          #       card:
          #         type: custom:button-card
          #         entity: light.kitchen_lights
          #         template:
          #           - light
          #           - icon_hue

          #     - type: conditional
          #       conditions:
          #         - entity: input_select.selectable_room
          #           state: Living Room And Kitchen
          #       card:
          #         type: custom:button-card
          #         entity: light.living_room_and_kitchen_lights
          #         template:
          #           - light
          #           - icon_hue

          #     - type: conditional
          #       conditions:
          #         - entity: input_select.selectable_room
          #           state: Bedroom
          #       card:
          #         type: custom:button-card
          #         entity: light.bedroom_lights
          #         template:
          #           - light
          #           - icon_hue
                    
          # # Conditional: Selectable Light
                    
          # - type: horizontal-stack
          #   cards:

          #     - type: conditional
          #       conditions:
          #         - entity: input_select.selectable_light
          #           state: Chandelier
          #       card:
          #         type: custom:button-card
          #         entity: light.chandelier
          #         tap_action:
          #           action: none
          #         template:
          #           - light
          #           - icon_hue

          #     - type: conditional
          #       conditions:
          #         - entity: input_select.selectable_light
          #           state: TV
          #       card:
          #         type: custom:button-card
          #         entity: light.tv
          #         template:
          #           - light
          #           - icon_hue

          #     - type: conditional
          #       conditions:
          #         - entity: input_select.selectable_light
          #           state: Kitchen East
          #       card:
          #         type: custom:button-card
          #         entity: light.kitchen_east
          #         template:
          #           - light
          #           - icon_hue

          #     - type: conditional
          #       conditions:
          #         - entity: input_select.selectable_light
          #           state: Kitchen West
          #       card:
          #         type: custom:button-card
          #         entity: light.kitchen_west
          #         template:
          #           - light
          #           - icon_hue

          #     - type: conditional
          #       conditions:
          #         - entity: input_select.selectable_light
          #           state: Bedroom
          #       card:
          #         type: custom:button-card
          #         entity: light.bedroom
          #         template:
          #           - light
          #           - icon_hue
                    
          #     - type: conditional
          #       conditions:
          #         - entity: input_select.selectable_light
          #           state: Bed
          #       card:
          #         type: custom:button-card
          #         entity: light.bed
          #         template:
          #           - light
          #           - icon_hue
                    
          #     - type: conditional
          #       conditions:
          #         - entity: input_select.selectable_light
          #           state: Hallway
          #       card:
          #         type: custom:button-card
          #         entity: light.hallway
          #         template:
          #           - light
          #           - icon_hue
                    
          #     - type: conditional
          #       conditions:
          #         - entity: input_select.selectable_light
          #           state: Bathroom
          #       card:
          #         type: custom:button-card
          #         entity: light.bathroom
          #         template:
          #           - light
          #           - icon_hue
              
              
          # let room = states[input_select.selectable_room].state.toLowerCase().replace(/ /g, "_");
          # return 'light.' + room + '_lights';

          # - type: custom:button-card
          #   entity: script.goodnight
          #   name: Goodnight
          #   hold_action:
          #     action: none
          #   template:
          #     - base
          #     - icon_home
              
              

          # - type: custom:button-card
          #   entity: script.home_leave
          #   name: Stäng allt
          #   hold_action:
          #     action: none
          #   template:
          #     - base
          #     - icon_away

          # - type: custom:button-card
          #   entity: script.morning
          #   name: Morning
          #   hold_action:
          #     action: none
          #   template:
          #     - base
          #     - icon_away

          # - type: button
            # entity: group.selected_room_lights
            # name: Cameras
            # tap_action: !include popup/frigate_cards.yaml
            # template:
            #   - light
              # - icon_hue

      #################################################
      #                                               #
      #                    FOOTER                     #
      #                                               #
      #################################################

      - type: custom:button-card
        view_layout:
          grid-area: footer
        entity: sensor.time
        template: coronavirus
